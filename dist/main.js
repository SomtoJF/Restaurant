(()=>{"use strict";var n={650:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(537),o=e.n(t),i=e(645),a=e.n(i)()(o());a.push([n.id,"form{\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    height: 300px;\r\n    width: max(30%, 250px);\r\n    margin-top: -150px;\r\n    margin-left: calc(-1 * 0.5 * (max(30%, 250px)));\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 15px;\r\n    border: solid 1px #fff;\r\n    box-shadow: 0 0 1rem 0 rgba(0, 0, 0, 0.2);\r\n}\r\nform::before{\r\n    background-color: rgba(255,255,255,0.4);\r\n    backdrop-filter: blur(10px) saturate(100%) contrast(45%) brightness(130%);\r\n    content: '';\r\n}\r\ninput{\r\n    display: block;\r\n}\r\ntextarea{\r\n    height: 100px;\r\n    display: block;\r\n    width: 100%;\r\n}\r\nbutton[type = 'submit']{\r\n    width: 20%;\r\n    height: 10%;\r\n    border-radius: 10px;\r\n    display: block;\r\n    border: none;\r\n    font-weight: 700;\r\n    background-color: rgba(255,255,255,0.5);\r\n    backdrop-filter: blur(10px) saturate(100%) contrast(45%) brightness(130%);\r\n}\r\nbutton[type = 'submit']:hover{\r\n    background-color: #FFA836;\r\n    color: white;\r\n}","",{version:3,sources:["webpack://./src/contact.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,aAAa;IACb,kBAAkB;IAClB,QAAQ;IACR,SAAS;IACT,aAAa;IACb,sBAAsB;IACtB,kBAAkB;IAClB,+CAA+C;IAC/C,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,uBAAuB;IACvB,mBAAmB;IACnB,mBAAmB;IACnB,sBAAsB;IACtB,yCAAyC;AAC7C;AACA;IACI,uCAAuC;IACvC,yEAAyE;IACzE,WAAW;AACf;AACA;IACI,cAAc;AAClB;AACA;IACI,aAAa;IACb,cAAc;IACd,WAAW;AACf;AACA;IACI,UAAU;IACV,WAAW;IACX,mBAAmB;IACnB,cAAc;IACd,YAAY;IACZ,gBAAgB;IAChB,uCAAuC;IACvC,yEAAyE;AAC7E;AACA;IACI,yBAAyB;IACzB,YAAY;AAChB",sourcesContent:["form{\r\n    box-sizing: border-box;\r\n    padding: 10px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    height: 300px;\r\n    width: max(30%, 250px);\r\n    margin-top: -150px;\r\n    margin-left: calc(-1 * 0.5 * (max(30%, 250px)));\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 15px;\r\n    border: solid 1px #fff;\r\n    box-shadow: 0 0 1rem 0 rgba(0, 0, 0, 0.2);\r\n}\r\nform::before{\r\n    background-color: rgba(255,255,255,0.4);\r\n    backdrop-filter: blur(10px) saturate(100%) contrast(45%) brightness(130%);\r\n    content: '';\r\n}\r\ninput{\r\n    display: block;\r\n}\r\ntextarea{\r\n    height: 100px;\r\n    display: block;\r\n    width: 100%;\r\n}\r\nbutton[type = 'submit']{\r\n    width: 20%;\r\n    height: 10%;\r\n    border-radius: 10px;\r\n    display: block;\r\n    border: none;\r\n    font-weight: 700;\r\n    background-color: rgba(255,255,255,0.5);\r\n    backdrop-filter: blur(10px) saturate(100%) contrast(45%) brightness(130%);\r\n}\r\nbutton[type = 'submit']:hover{\r\n    background-color: #FFA836;\r\n    color: white;\r\n}"],sourceRoot:""}]);const A=a},83:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(537),o=e.n(t),i=e(645),a=e.n(i)()(o());a.push([n.id,"#menu-container{\r\n    box-sizing: border-box;\r\n    height: 50vh;\r\n    width: 100%;\r\n    padding: 0px 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    justify-content: start;\r\n}\r\n#menu-container > div{\r\n    height: 28%;\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    gap: 10px;\r\n}\r\n#menu-container > div > div:first-child{\r\n    background-color: inherit;\r\n    font-family: 'Lobster', fantasy, sans-serif;\r\n}\r\n#menu-container > div > div{\r\n    box-sizing: border-box;\r\n    background-color: white;\r\n    border-radius: 10px;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: 100px;\r\n    height: 100%;\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    padding: 10px;\r\n}\r\n#menu-container > div > div > button{\r\n    background-color: #FFA836;\r\n    height: 25px;\r\n    width: 25px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    font-weight: 700;\r\n}\r\n@media all and (max-width: 1000px) {\r\n    #menu-container > div{\r\n        grid-template-columns: repeat(6, max(30%, 150px));\r\n        overflow-x: overlay;\r\n    }\r\n    #menu-container > div:nth-child(2){\r\n        grid-template-columns: repeat(4, max(30%, 150px));\r\n        overflow-x: overlay;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/menu.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,YAAY;IACZ,WAAW;IACX,iBAAiB;IACjB,aAAa;IACb,sBAAsB;IACtB,SAAS;IACT,sBAAsB;AAC1B;AACA;IACI,WAAW;IACX,WAAW;IACX,aAAa;IACb,qCAAqC;IACrC,SAAS;AACb;AACA;IACI,yBAAyB;IACzB,2CAA2C;AAC/C;AACA;IACI,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,2BAA2B;IAC3B,4BAA4B;IAC5B,sBAAsB;IACtB,YAAY;IACZ,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,yBAAyB;IACzB,mBAAmB;IACnB,aAAa;AACjB;AACA;IACI,yBAAyB;IACzB,YAAY;IACZ,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,gBAAgB;AACpB;AACA;IACI;QACI,iDAAiD;QACjD,mBAAmB;IACvB;IACA;QACI,iDAAiD;QACjD,mBAAmB;IACvB;AACJ",sourcesContent:["#menu-container{\r\n    box-sizing: border-box;\r\n    height: 50vh;\r\n    width: 100%;\r\n    padding: 0px 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    justify-content: start;\r\n}\r\n#menu-container > div{\r\n    height: 28%;\r\n    width: 100%;\r\n    display: grid;\r\n    grid-template-columns: repeat(6, 1fr);\r\n    gap: 10px;\r\n}\r\n#menu-container > div > div:first-child{\r\n    background-color: inherit;\r\n    font-family: 'Lobster', fantasy, sans-serif;\r\n}\r\n#menu-container > div > div{\r\n    box-sizing: border-box;\r\n    background-color: white;\r\n    border-radius: 10px;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: 100px;\r\n    height: 100%;\r\n    text-align: center;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    padding: 10px;\r\n}\r\n#menu-container > div > div > button{\r\n    background-color: #FFA836;\r\n    height: 25px;\r\n    width: 25px;\r\n    border-radius: 50%;\r\n    border: none;\r\n    font-weight: 700;\r\n}\r\n@media all and (max-width: 1000px) {\r\n    #menu-container > div{\r\n        grid-template-columns: repeat(6, max(30%, 150px));\r\n        overflow-x: overlay;\r\n    }\r\n    #menu-container > div:nth-child(2){\r\n        grid-template-columns: repeat(4, max(30%, 150px));\r\n        overflow-x: overlay;\r\n    }\r\n}"],sourceRoot:""}]);const A=a},459:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(537),o=e.n(t),i=e(645),a=e.n(i)()(o());a.push([n.id,"#slider-container{\r\n    box-sizing: border-box;\r\n    height: 40vh;\r\n    width: 100%;\r\n    background-color: inherit;\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    margin-top: 12vh;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    padding: 0px 20px;\r\n    gap: 10px;\r\n    align-self: center;\r\n}\r\n \r\n#slider-container > div{\r\n    height: 95%;\r\n    border-radius: 15px;\r\n    background-color: #FFF;\r\n    background-size: 150px;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: center;\r\n    background-position: center;\r\n}\r\n#slider-container > div:hover{\r\n    background-color: #FFA836;\r\n}\r\n#slider-container > div > button{\r\n    background-color: #FFA836;\r\n    color: black;\r\n    font-weight: 700;\r\n    width: 80%;\r\n    height: 20%;\r\n    position: relative;\r\n    bottom: 10px;\r\n    border: none;\r\n    border-radius: 15px;\r\n}\r\n#slider-container > div:hover > button{\r\n    background-color: #FFF;\r\n    color: #FFA836;\r\n}\r\n@media all and (max-width: 1000px) {\r\n    #slider-container{\r\n        grid-template-columns: repeat(5, max(30%, 150px));\r\n        overflow-x: scroll;\r\n    }\r\n}","",{version:3,sources:["webpack://./src/slider.css"],names:[],mappings:"AAAA;IACI,sBAAsB;IACtB,YAAY;IACZ,WAAW;IACX,yBAAyB;IACzB,aAAa;IACb,qCAAqC;IACrC,gBAAgB;IAChB,2BAA2B;IAC3B,mBAAmB;IACnB,iBAAiB;IACjB,SAAS;IACT,kBAAkB;AACtB;;AAEA;IACI,WAAW;IACX,mBAAmB;IACnB,sBAAsB;IACtB,sBAAsB;IACtB,aAAa;IACb,qBAAqB;IACrB,uBAAuB;IACvB,2BAA2B;AAC/B;AACA;IACI,yBAAyB;AAC7B;AACA;IACI,yBAAyB;IACzB,YAAY;IACZ,gBAAgB;IAChB,UAAU;IACV,WAAW;IACX,kBAAkB;IAClB,YAAY;IACZ,YAAY;IACZ,mBAAmB;AACvB;AACA;IACI,sBAAsB;IACtB,cAAc;AAClB;AACA;IACI;QACI,iDAAiD;QACjD,kBAAkB;IACtB;AACJ",sourcesContent:["#slider-container{\r\n    box-sizing: border-box;\r\n    height: 40vh;\r\n    width: 100%;\r\n    background-color: inherit;\r\n    display: grid;\r\n    grid-template-columns: repeat(5, 1fr);\r\n    margin-top: 12vh;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    padding: 0px 20px;\r\n    gap: 10px;\r\n    align-self: center;\r\n}\r\n \r\n#slider-container > div{\r\n    height: 95%;\r\n    border-radius: 15px;\r\n    background-color: #FFF;\r\n    background-size: 150px;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    justify-content: center;\r\n    background-position: center;\r\n}\r\n#slider-container > div:hover{\r\n    background-color: #FFA836;\r\n}\r\n#slider-container > div > button{\r\n    background-color: #FFA836;\r\n    color: black;\r\n    font-weight: 700;\r\n    width: 80%;\r\n    height: 20%;\r\n    position: relative;\r\n    bottom: 10px;\r\n    border: none;\r\n    border-radius: 15px;\r\n}\r\n#slider-container > div:hover > button{\r\n    background-color: #FFF;\r\n    color: #FFA836;\r\n}\r\n@media all and (max-width: 1000px) {\r\n    #slider-container{\r\n        grid-template-columns: repeat(5, max(30%, 150px));\r\n        overflow-x: scroll;\r\n    }\r\n}"],sourceRoot:""}]);const A=a},426:(n,r,e)=>{e.d(r,{Z:()=>A});var t=e(537),o=e.n(t),i=e(645),a=e.n(i)()(o());a.push([n.id,":root{\r\n    font-size: 16px;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    --menu-font: 'Copperplate', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n}\r\nhtml{\r\n    padding: 0px;\r\n    margin: 0px;\r\n}\r\nbody{\r\n    background-color: #E5E4E2;\r\n    padding: 0px;\r\n    margin: 0px;\r\n}\r\n#content{\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n}\r\nnav{\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 10vh;\r\n    position: fixed;\r\n    width: 100vw;\r\n    background-color: white;\r\n    padding: 0px 10px;\r\n    box-shadow: 0px 5px 5px grey;\r\n}\r\n#logo{\r\n    font-family: 'Lobster', fantasy, sans-serif;\r\n    font-size: 1.5rem;\r\n}\r\nul{\r\n    display: flex;\r\n    gap: 20px;\r\n    margin-right: 20px;\r\n}\r\nnav ul li{\r\n    list-style-type: none;\r\n    font-family: var(--menu-font);\r\n}\r\nnav ul li:hover{\r\n    border-bottom: solid 2px #FFA836;\r\n}\r\n#home-content{\r\n    align-self: center;\r\n    display: grid;\r\n    height: 40vh;\r\n    width: 80%;\r\n    grid-template-columns: 1.5fr 1fr;\r\n    grid-template-rows: 1fr 5fr;\r\n    background-color: #FFF;\r\n    box-shadow: 0px 0px 5px grey;\r\n    padding-left: 10px;\r\n    border-radius: 15px;\r\n}\r\n#home-content > div:first-child{\r\n    grid-row: 1 / 2;\r\n    grid-column: 1 / 2;\r\n    font-family: 'Lobster', fantasy, sans-serif;\r\n}\r\n#home-content > div:nth-child(2){\r\n    grid-row: 1 / 3;\r\n    grid-column: 2 / 3;\r\n}\r\n#home-content > div:nth-child(3){\r\n    grid-row: 2 / 3;\r\n    grid-column: 1 / 2;\r\n    overflow-y: auto;\r\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,eAAe;IACf,wIAAwI;IACxI,uJAAuJ;AAC3J;AACA;IACI,YAAY;IACZ,WAAW;AACf;AACA;IACI,yBAAyB;IACzB,YAAY;IACZ,WAAW;AACf;AACA;IACI,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,8BAA8B;AAClC;AACA;IACI,sBAAsB;IACtB,aAAa;IACb,8BAA8B;IAC9B,mBAAmB;IACnB,YAAY;IACZ,eAAe;IACf,YAAY;IACZ,uBAAuB;IACvB,iBAAiB;IACjB,4BAA4B;AAChC;AACA;IACI,2CAA2C;IAC3C,iBAAiB;AACrB;AACA;IACI,aAAa;IACb,SAAS;IACT,kBAAkB;AACtB;AACA;IACI,qBAAqB;IACrB,6BAA6B;AACjC;AACA;IACI,gCAAgC;AACpC;AACA;IACI,kBAAkB;IAClB,aAAa;IACb,YAAY;IACZ,UAAU;IACV,gCAAgC;IAChC,2BAA2B;IAC3B,sBAAsB;IACtB,4BAA4B;IAC5B,kBAAkB;IAClB,mBAAmB;AACvB;AACA;IACI,eAAe;IACf,kBAAkB;IAClB,2CAA2C;AAC/C;AACA;IACI,eAAe;IACf,kBAAkB;AACtB;AACA;IACI,eAAe;IACf,kBAAkB;IAClB,gBAAgB;AACpB",sourcesContent:[":root{\r\n    font-size: 16px;\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    --menu-font: 'Copperplate', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n}\r\nhtml{\r\n    padding: 0px;\r\n    margin: 0px;\r\n}\r\nbody{\r\n    background-color: #E5E4E2;\r\n    padding: 0px;\r\n    margin: 0px;\r\n}\r\n#content{\r\n    height: 100vh;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n}\r\nnav{\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    height: 10vh;\r\n    position: fixed;\r\n    width: 100vw;\r\n    background-color: white;\r\n    padding: 0px 10px;\r\n    box-shadow: 0px 5px 5px grey;\r\n}\r\n#logo{\r\n    font-family: 'Lobster', fantasy, sans-serif;\r\n    font-size: 1.5rem;\r\n}\r\nul{\r\n    display: flex;\r\n    gap: 20px;\r\n    margin-right: 20px;\r\n}\r\nnav ul li{\r\n    list-style-type: none;\r\n    font-family: var(--menu-font);\r\n}\r\nnav ul li:hover{\r\n    border-bottom: solid 2px #FFA836;\r\n}\r\n#home-content{\r\n    align-self: center;\r\n    display: grid;\r\n    height: 40vh;\r\n    width: 80%;\r\n    grid-template-columns: 1.5fr 1fr;\r\n    grid-template-rows: 1fr 5fr;\r\n    background-color: #FFF;\r\n    box-shadow: 0px 0px 5px grey;\r\n    padding-left: 10px;\r\n    border-radius: 15px;\r\n}\r\n#home-content > div:first-child{\r\n    grid-row: 1 / 2;\r\n    grid-column: 1 / 2;\r\n    font-family: 'Lobster', fantasy, sans-serif;\r\n}\r\n#home-content > div:nth-child(2){\r\n    grid-row: 1 / 3;\r\n    grid-column: 2 / 3;\r\n}\r\n#home-content > div:nth-child(3){\r\n    grid-row: 2 / 3;\r\n    grid-column: 1 / 2;\r\n    overflow-y: auto;\r\n}"],sourceRoot:""}]);const A=a},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var e="",t=void 0!==r[5];return r[4]&&(e+="@supports (".concat(r[4],") {")),r[2]&&(e+="@media ".concat(r[2]," {")),t&&(e+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),e+=n(r),t&&(e+="}"),r[2]&&(e+="}"),r[4]&&(e+="}"),e})).join("")},r.i=function(n,e,t,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var A=0;A<this.length;A++){var c=this[A][0];null!=c&&(a[c]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);t&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),e&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=e):d[2]=e),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),r.push(d))}},r}},537:n=>{n.exports=function(n){var r=n[1],e=n[3];if(!e)return r;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */"),a=e.sources.map((function(n){return"/*# sourceURL=".concat(e.sourceRoot||"").concat(n," */")}));return[r].concat(a).concat([i]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function e(n){for(var e=-1,t=0;t<r.length;t++)if(r[t].identifier===n){e=t;break}return e}function t(n,t){for(var i={},a=[],A=0;A<n.length;A++){var c=n[A],s=t.base?c[0]+t.base:c[0],d=i[s]||0,l="".concat(s," ").concat(d);i[s]=d+1;var p=e(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)r[p].references++,r[p].updater(u);else{var C=o(u,t);t.byIndex=A,r.splice(A,0,{identifier:l,updater:C,references:1})}a.push(l)}return a}function o(n,r){var e=r.domAPI(r);return e.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;e.update(n=r)}else e.remove()}}n.exports=function(n,o){var i=t(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var A=e(i[a]);r[A].references--}for(var c=t(n,o),s=0;s<i.length;s++){var d=e(i[s]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}i=c}}},569:n=>{var r={};n.exports=function(n,e){var t=function(n){if(void 0===r[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}r[n]=e}return r[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(e)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,e)=>{n.exports=function(n){var r=e.nc;r&&n.setAttribute("nonce",r)}},795:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(e){!function(n,r,e){var t="";e.supports&&(t+="@supports (".concat(e.supports,") {")),e.media&&(t+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(t+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),t+=e.css,o&&(t+="}"),e.media&&(t+="}"),e.supports&&(t+="}");var i=e.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),r.styleTagTransform(t,n,r.options)}(r,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}}},r={};function e(t){var o=r[t];if(void 0!==o)return o.exports;var i=r[t]={id:t,exports:{}};return n[t](i,i.exports,e),i.exports}e.n=n=>{var r=n&&n.__esModule?()=>n.default:()=>n;return e.d(r,{a:r}),r},e.d=(n,r)=>{for(var t in r)e.o(r,t)&&!e.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:r[t]})},e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),e.o=(n,r)=>Object.prototype.hasOwnProperty.call(n,r),(()=>{var n;e.g.importScripts&&(n=e.g.location+"");var r=e.g.document;if(!n&&r&&(r.currentScript&&(n=r.currentScript.src),!n)){var t=r.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=n})(),e.nc=void 0,(()=>{var n=e(379),r=e.n(n),t=e(795),o=e.n(t),i=e(569),a=e.n(i),A=e(565),c=e.n(A),s=e(216),d=e.n(s),l=e(589),p=e.n(l),u=e(426),C={};C.styleTagTransform=p(),C.setAttributes=c(),C.insert=a().bind(null,"head"),C.domAPI=o(),C.insertStyleElement=d(),r()(u.Z,C),u.Z&&u.Z.locals&&u.Z.locals;const g=e.p+"3fc96e53a3cf6d9e3170.png",m=e.p+"fdf0ae07cf387b1af785.png",b=e.p+"95e85c58d53e32a7c244.png",f=e.p+"011898987f4152107944.png",h=e.p+"3943a9d4c6d04cc6ce10.png";var B=e(459),x={};x.styleTagTransform=p(),x.setAttributes=c(),x.insert=a().bind(null,"head"),x.domAPI=o(),x.insertStyleElement=d(),r()(B.Z,x),B.Z&&B.Z.locals&&B.Z.locals;const I=function(){let n=document.createElement("div");n.setAttribute("id","slider-container");let r=[g,m,b,f,h],e=["Pepperoni","Cheese","Veggie","Vegan","Chicken"];for(let t=0;t<5;t++){let o=document.createElement("div");o.style.backgroundImage=`url(${r[t]})`;let i=document.createElement("button");i.textContent=e[t],o.appendChild(i),n.appendChild(o)}return n},y=function(){let n,r=document.createElement("div");r.setAttribute("id","home-content");for(let e=0;e<3;e++)n=document.createElement("div"),0==e&&(n.innerHTML="<h2>...Under 30 minutes delivery</h2>"),1==e&&(n.style.backgroundImage=`url(${g})`,n.style.backgroundSize="contain",n.style.backgroundRepeat="no-repeat",n.style.backgroundPosition="center"),2==e&&(n.textContent='This is some dummy text. Behave like the text is very interesting. Say "WOW" so others come and see this!!'),r.appendChild(n);return r},v=e.p+"bd85c48383b9d0aeb142.png",k=e.p+"41ef0784008ada3e4714.png",w=e.p+"84d81d96cbbcb7b7da04.png",F=e.p+"3b88c6f33e42f9dc9cec.png",E=e.p+"c08126f26508a7564a0d.png",S=e.p+"0ce50eb49a673baf41f1.png",Z=e.p+"7eb58a0a4ad2a822880e.png",z=e.p+"7dfe58cedfa39f2c0159.png",j=e.p+"619fe8e136d0438356c6.png",T=e.p+"c204b78d0b535a0a6bfc.png";var Y=e(83),W={};W.styleTagTransform=p(),W.setAttributes=c(),W.insert=a().bind(null,"head"),W.domAPI=o(),W.insertStyleElement=d(),r()(Y.Z,W),Y.Z&&Y.Z.locals&&Y.Z.locals;const L=function(){let n=[v,k,w,F,E],r=["Small","Medium","Large"],e=[S,Z,z,j,T],t=document.createElement("div");t.setAttribute("id","menu-container");for(let o=0;o<3;o++){let i=document.createElement("div"),a=document.createElement("div");if(0==o){a.textContent="Toppings",i.appendChild(a);for(let r=0;r<n.length;r++){let e=document.createElement("div");e.style.backgroundImage=`url(${n[r]})`,e.addEventListener("click",(function(){"white"==e.style.backgroundColor?e.style.backgroundColor="#FFA836":e.style.backgroundColor="white"})),i.appendChild(e)}}if(1==o){a.textContent="Sizes",i.appendChild(a);for(let n=0;n<r.length;n++){let e=document.createElement("div");e.textContent=`${r[n]}`,e.addEventListener("click",(function(){"white"==e.style.backgroundColor?e.style.backgroundColor="#FFA836":e.style.backgroundColor="white"})),i.appendChild(e)}}if(2==o){a.textContent="Drinks",i.appendChild(a);for(let n=0;n<e.length;n++){let r=document.createElement("div");r.style.backgroundImage=`url(${e[n]})`,r.addEventListener("click",(function(){"white"==r.style.backgroundColor?r.style.backgroundColor="#FFA836":r.style.backgroundColor="white"})),i.appendChild(r)}}t.appendChild(i)}return t};var U=e(650),M={};M.styleTagTransform=p(),M.setAttributes=c(),M.insert=a().bind(null,"head"),M.domAPI=o(),M.insertStyleElement=d(),r()(U.Z,M),U.Z&&U.Z.locals&&U.Z.locals;const O=e.p+"5492360864241ab4395c.gif";let R=document.getElementById("content");let N=document.getElementById("content"),D=function(){let n=document.createElement("nav"),r=document.createElement("div");r.textContent="pizzaPizza",r.setAttribute("id","logo");let e,t=document.createElement("ul"),o=["HOME","MENU","CONTACT US"];for(let n=0;n<3;n++)e=document.createElement("li"),e.textContent=o[n],0==n&&e.addEventListener("click",(()=>{N.innerHTML="",N.style.backgroundImage="none",D(),N.appendChild(I()),N.appendChild(y())})),1==n&&e.addEventListener("click",(()=>{N.innerHTML="",N.style.backgroundImage="none",D(),N.appendChild(I()),N.appendChild(L())})),2==n&&e.addEventListener("click",(()=>{N.innerHTML="",D(),N.appendChild((R.style.backgroundImage=`url(${O})`,function(){let n=document.createElement("form"),r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("name","name"),r.setAttribute("required",""),r.setAttribute("maxlength","30"),r.setAttribute("placeholder","Your Name"),r.setAttribute("id","name");let e=document.createElement("textarea");e.setAttribute("rows","5"),e.setAttribute("name","description"),e.setAttribute("required",""),e.setAttribute("placeholder","Description"),e.setAttribute("id","description");let t=document.createElement("button");return t.setAttribute("type","submit"),t.setAttribute("id","submit"),t.textContent="Send",n.appendChild(r),n.appendChild(e),n.appendChild(t),n}()))})),t.appendChild(e);n.appendChild(r),n.appendChild(t),N.appendChild(n)};const q=D;let H=document.getElementById("content");q(),H.appendChild(I()),H.appendChild(y())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,